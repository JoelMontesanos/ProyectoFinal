<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="10.5460" tests="14" failures="7">
  <testsuite name="Root Suite" timestamp="2021-12-11T23:11:12" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="express_authentication" timestamp="2021-12-11T23:11:12" tests="7" file="C:\Users\Documentacion\Desktop\proyect\test\index.spec.js" time="4.5210" failures="2">
    <testcase name="express_authentication Should generate an API key and add it to file" time="0.5040" classname="Should generate an API key and add it to file">
    </testcase>
    <testcase name="express_authentication &quot;before each&quot; hook for &quot;Should generate 5 unique API Keys&quot;" time="2.0130" classname="&quot;before each&quot; hook for &quot;Should generate 5 unique API Keys&quot;">
      <failure message="Timeout of 2000ms exceeded. For async tests and hooks, ensure &quot;done()&quot; is called; if returning a Promise, ensure it resolves. (C:\Users\Documentacion\Desktop\proyect\test\index.spec.js)" type="Error"><![CDATA[Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\Documentacion\Desktop\proyect\test\index.spec.js)
    at listOnTimeout (internal/timers.js:531:17)
    at processTimers (internal/timers.js:475:7)]]></failure>
    </testcase>
    <testcase name="express_authentication &quot;after each&quot; hook for &quot;Should generate 5 unique API Keys&quot;" time="2.0040" classname="&quot;after each&quot; hook for &quot;Should generate 5 unique API Keys&quot;">
      <failure message="Timeout of 2000ms exceeded. For async tests and hooks, ensure &quot;done()&quot; is called; if returning a Promise, ensure it resolves. (C:\Users\Documentacion\Desktop\proyect\test\index.spec.js)" type="Error"><![CDATA[Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\Documentacion\Desktop\proyect\test\index.spec.js)
    at listOnTimeout (internal/timers.js:531:17)
    at processTimers (internal/timers.js:475:7)]]></failure>
    </testcase>
  </testsuite>
  <testsuite name="it should use operations" timestamp="2021-12-11T23:11:16" tests="4" file="C:\Users\Documentacion\Desktop\proyect\test\operations.spec.js" time="0.0010" failures="0">
    <testcase name="it should use operations Should use sum" time="0.0010" classname="Should use sum">
    </testcase>
    <testcase name="it should use operations Should use multiply" time="0.0000" classname="Should use multiply">
    </testcase>
    <testcase name="it should use operations Should use divide" time="0.0000" classname="Should use divide">
    </testcase>
    <testcase name="it should use operations Should use substract" time="0.0000" classname="Should use substract">
    </testcase>
  </testsuite>
  <testsuite name="payment check" timestamp="2021-12-11T23:11:16" tests="3" file="C:\Users\Documentacion\Desktop\proyect\test\payment.spec.js" time="6.0240" failures="5">
    <testcase name="payment check Should generate an random price" time="2.0080" classname="Should generate an random price">
      <failure message="Timeout of 2000ms exceeded. For async tests and hooks, ensure &quot;done()&quot; is called; if returning a Promise, ensure it resolves. (C:\Users\Documentacion\Desktop\proyect\test\payment.spec.js)" type="Error"><![CDATA[Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\Documentacion\Desktop\proyect\test\payment.spec.js)
    at listOnTimeout (internal/timers.js:531:17)
    at processTimers (internal/timers.js:475:7)]]></failure>
    </testcase>
    <testcase name="payment check &quot;after each&quot; hook for &quot;Should generate 5 random prices&quot;" time="0.0000" classname="&quot;after each&quot; hook for &quot;Should generate 5 random prices&quot;">
      <failure message="done() called multiple times" type="Error"><![CDATA[Error: done() called multiple times
    at C:\Users\Documentacion\Desktop\proyect\test\payment.spec.js:35:23]]></failure>
    </testcase>
    <testcase name="payment check Should generate 5 random prices" time="2.0010" classname="Should generate 5 random prices">
      <failure message="Timeout of 2000ms exceeded. For async tests and hooks, ensure &quot;done()&quot; is called; if returning a Promise, ensure it resolves. (C:\Users\Documentacion\Desktop\proyect\test\payment.spec.js)" type="Error"><![CDATA[Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\Documentacion\Desktop\proyect\test\payment.spec.js)
    at listOnTimeout (internal/timers.js:531:17)
    at processTimers (internal/timers.js:475:7)]]></failure>
    </testcase>
    <testcase name="payment check &quot;after each&quot; hook for &quot;Should return 5 promo codes&quot;" time="0.0000" classname="&quot;after each&quot; hook for &quot;Should return 5 promo codes&quot;">
      <failure message="done() called multiple times" type="Error"><![CDATA[Error: done() called multiple times
    at C:\Users\Documentacion\Desktop\proyect\test\payment.spec.js:35:23]]></failure>
    </testcase>
    <testcase name="payment check Should return 5 promo codes" time="2.0150" classname="Should return 5 promo codes">
      <failure message="Timeout of 2000ms exceeded. For async tests and hooks, ensure &quot;done()&quot; is called; if returning a Promise, ensure it resolves. (C:\Users\Documentacion\Desktop\proyect\test\payment.spec.js)" type="Error"><![CDATA[Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves. (C:\Users\Documentacion\Desktop\proyect\test\payment.spec.js)
    at listOnTimeout (internal/timers.js:531:17)
    at processTimers (internal/timers.js:475:7)]]></failure>
    </testcase>
  </testsuite>
</testsuites>